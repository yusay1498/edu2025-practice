services:
  points-api:
    build:
      context: ./points-handler
      args:
        JAR: ./target/*.jar
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/purchase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - postgres

  kafka-consumer:
    build:
      context: ./kafka-message-handler
      args:
        JAR: ./target/*.jar
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/purchase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAPSERVERS: broker:29092
      SPRING_KAFKA_SECURITY_PROTOCOL: PLAINTEXT
      SPRING_KAFKA_PROPERTIES_SASL_CLIENT_CALLBACK_HANDLER_CLASS:
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: purchase
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - "./schema.sql:/docker-entrypoint-initdb.d/schema.sql"

  dummy-sales-log:
    image: ghcr.io/yo1000/dummy-sales-log:latest
    ports:
      - "8081:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: broker:29092
      SPRING_KAFKA_TEMPLATE_DEFAULTTOPIC: purchases
      APP_THREAD_NOISESPERSEC: 500

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=docker-kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
    ports:
      - "18081:8080"
    depends_on:
      - broker