Javaプログラミング言語では、メソッドが非チェック例外（RuntimeException、Error、そのサブクラス）をキャッチしたり指定したりすることを要求しません。
そのため、プログラマーは非チェック例外だけをスローするコードを書いたり、すべての例外サブクラスをRuntimeExceptionから継承させたりしがちです。
これらの手抜きによって、プログラマーはコンパイラエラーを気にせず、例外の指定やキャッチをしなくてもコードを書くことができます。
これはプログラマーにとっては便利に思えるかもしれませんが、catchまたはspecify要件の意図を回避してしまい、あなたのクラスを使う他の人に問題を引き起こす可能性があります。